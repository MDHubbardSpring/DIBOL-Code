;           WEIGHT PROGRAM

RECORD DDD
	PART,9A11,'BOW','WW','CSW','EW','PLUG','HPP','FLAT WASHER','CP','CPP'
RECORD DATA
	OD,D5
	ODA,A6
	OD1,D5
	OD1A,A6
	OD2,D5
	OD2A,A6
	ID,D5
	IDA,A6
	TH,D5
	THA,A6
	DEN,D3
	HOLE,D1
	HOLEA,A1
	MAT,A16
	HIGH,D5
	HIGHA,A6
	RAD,D5
	RADA,A6
	WEB,D5
	SLOTX,D5
	SLOTA,A6
	SLOTY,D5
	SLOTB,A6
	ODM,D6
	HIGHM,D6
	RADM,D6
	DIAM,D6
RECORD OUTPUT
	A0,A80
	A1,A80
	A1A,A80
	A1B,A80
	A2,A80
	A3,A80
	A4,A80
	A5,A80
	A6,A80
	A7,A80
RECORD INFO
	SWIDE,D5
	SWIDEA,A8
	FSWIDE,D5
	WIDTH,A8
	FEED,D5
	FEEDA,A6
	STWT,D6
	FSTWT,D6
	FWT,D6
	FWTA,A7
	GG,D3
	HH,D3
	N,D2
	J,D2
	H,D6
RECORD	KEYS
	KEYA,A2
	KEY1,D2
	KEYB,A2
	KEY2,D2
	KEYC,A2
	KEY3,D2
	KEYD,A2
	KEY4,D2
	KEYE,A2
	KEY5,D2
RECORD ANS
	YN,A1

RECORD	MISC
	KKK,A6
	LLL,A5
	MMM,D5
	QQQ,A7
	RRR,A6
	SSS,D6
RECORD	MORE
	WODA,A6
	WOD,D5
	WLA,A7
	WL,D8
	COILA,A7
	COIL,D6
	LEG1A,A6
	LEG1,D5
	LEG2A,A6
	LEG2,D5
	HOOK1A,A6
	HOOK1,D5
	HOOK2A,A6
	HOOK2,D5
	WAREA,D7
	MOD,D6
	MOD1,D5
	MOD2,D5
	CIR,D5
	SQ,D8
	ED,D2
	P,D15
	Y,d15
	NUM,D15
	CIR1,D5
	CIR2,D5
	AVECIR,D5
	SW,D1
	SX,D1
	zzz,a8

PROC
	OPEN(7,I,'TT:')
	OPEN(8,O,'TT:')

	DISPLAY(8,13,'     WEIGHT - PROGRAM TO CALCULATE PART WEIGHT')

BGN,    DISPLAY(8,$SCR_POS(3,15),'MENU')
	DISPLAY(8,$SCR_POS(5,10),'1) PRESS STAMPING')
	DISPLAY(8,$SCR_POS(6,10),'2) WIRE FORM')
	DISPLAY(8,$SCR_POS(7,10),'3) WIRE SPRING')
	DISPLAY(8,$SCR_POS(8,10),'4) QUIT')
X0,     DISPLAY(8,$SCR_POS(10,5),'CHOOSE FROM ABOVE: ')
	ONERROR X0
	READS(7,KEYA)
	KEY1=KEYA
	IF(KEY1.EQ.0)GOTO X0
	IF(KEY1.GT.4)GOTO X0
	GOTO (P1,FF1,SS1,FINI), KEY1



P1,     DISPLAY(8,13,$SCR_CLR(SCREEN))
	DISPLAY(8,$SCR_POS(2,5),'PART TYPES')
	DISPLAY(8,$SCR_POS(3,10),'1) BOW')
	DISPLAY(8,$SCR_POS(4,10),'2) WW')
	DISPLAY(8,$SCR_POS(5,10),'3) CSW')
	DISPLAY(8,$SCR_POS(6,10),'4) EW')
	DISPLAY(8,$SCR_POS(7,10),'5) PLUG')
	DISPLAY(8,$SCR_POS(8,10),'6) HPP')
	DISPLAY(8,$SCR_POS(9,10),'7) FLAT WASHER')
	DISPLAY(8,$SCR_POS(10,10),'8) CP')
	DISPLAY(8,$SCR_POS(11,10),'9) CPP')
P2,     DISPLAY(8,$SCR_POS(13,5),'CHOOSE FROM ABOVE: ')
	ONERROR P2
	READS(7,KEYB)
	KEY2=KEYB
	IF(KEY2.EQ.0)GOTO P2
	IF(KEY2.GT.9)GOTO P2
	CALL KIND
P20,    DISPLAY(8,$SCR_CLR(SCREEN))
	DISPLAY(8,$SCR_POS(1,1))
	GOTO (P21,P21,P21,P21,P21,P21,P21,P28,P28), KEY2
P21,	WRITES(8," ")
	ONERROR P20
	DISPLAY(8,13,'     PART TYPE: ',PART(KEY2))
	WRITES(8," ")
	DISPLAY(8,13,'     ENTER OUTSIDE DIAMETER: ')
	READS(7,ODA)
	KKK=ODA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	OD=MMM
	IF(KEY2.EQ.5)GOTO P22
	DISPLAY(8,13,'     ENTER INSIDE DIAMETER: ')
	READS(7,IDA)
	KKK=IDA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	ID=MMM
P22,	IF(KEY2.EQ.4)GOTO P24
P23,	DISPLAY(8,13,'     ENTER MATERIAL THICKNESS: ')
	READS(7,THA)
	KKK=THA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	TH=MMM
	DISPLAY(8,13,'     ENTER HOLES IN DIE: ')
	READS(7,HOLEA)
	HOLE=HOLEA
	GOTO M1
	
P24,    DISPLAY(8,13,'     ENTER SLOT WIDTH: ')
	READS(7,SLOTA)
	KKK=SLOTA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	SLOTX=MMM
	DISPLAY(8,13,'     ENTER APPROX SLOT LENGTH: ')
	READS(7,SLOTB)
	KKK=SLOTB
	CALL DP
	IF(SW.EQ.1)GOTO P20
	SLOTY=MMM
	GOTO P23
	
P28,    WRITES(8," ")
	DISPLAY(8,13,'     PART TYPE: ',PART(KEY2))
	WRITES(8," ")
	DISPLAY(8,13,'     ENTER OUTSIDE DIAMETER: ')
	READS(7,ODA)
	KKK=ODA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	OD=MMM
	IF(KEY2.EQ.8)GOTO P29
	DISPLAY(8,13,'     ENTER INSIDE HOLE DIAMETER: ')
	READS(7,IDA)
	KKK=IDA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	ID=MMM
P29,    DISPLAY(8,13,'     ENTER TOTAL HEIGHT: ')
	READS(7,HIGHA)
	KKK=HIGHA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	HIGH=MMM
	DISPLAY(8,13,'     ENTER MATERIAL THICKNESS: ')
	READS(7,THA)
	KKK=THA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	TH=MMM
	DISPLAY(8,13,'     ENTER INSIDE RADIUS: ')
	READS(7,RADA)
	KKK=RADA
	CALL DP
	IF(SW.EQ.1)GOTO P20
	RAD=MMM
	DISPLAY(8,13,'     ENTER HOLES IN DIE: ')
	READS(7,HOLEA)
	HOLE=HOLEA
	GOTO M1


M1,     DISPLAY(8,$SCR_POS(9,5),'MATERIAL TYPES')
	DISPLAY(8,$SCR_POS(10,10),'1) STEEL')
	DISPLAY(8,$SCR_POS(11,10),'2) STAINLESS')
	IF(KEY4.GT.0)GOTO M1A
	DISPLAY(8,$SCR_POS(12,10),'3) ALUMINUM')
	DISPLAY(8,$SCR_POS(13,10),'4) BRASS')
M1A,	DISPLAY(8,$SCR_POS(14,10),'5) PHOS BRONZE')
	IF(KEY4.GT.0)GOTO M1B
	DISPLAY(8,$SCR_POS(15,10),'6) COPPER')
M1B,	DISPLAY(8,$SCR_POS(16,10),'7) BERYLLIUM COPPER')
M2,	DISPLAY(8,$SCR_POS(18,5),'CHOOSE FROM ABOVE: ')
	ONERROR M2
	READS(7,KEYC)
	KEY3=KEYC
	IF(KEY3.EQ.0)GOTO M2
	IF(KEY3.GT.7)GOTO M2
	GOTO (M3,M4,M5,M6,M7,M8,M9), KEY3
M3,     DEN=288
	MAT='STEEL'
	GOTO M10
M4,	den=292
	MAT='STAINLESS'
	GOTO M10
M5,     DEN=100
	MAT='ALUMINUM'
	GOTO M10
M6,     DEN=304   
	MAT='BRASS'
	GOTO M10
M7,     DEN=320
	MAT='PHOS BRONZE'
	GOTO M10
M8,     DEN=322
	MAT='COPPER'
	GOTO M10
M9,     DEN=297
	MAT='BERYLLIUM COPPER'
M10,	IF(KEY1.EQ.2)GOTO F1
	IF(KEY1.EQ.3)GOTO S5
	GOTO(M21,M21,M21,M22,M23,M21,M21,M24,M25), KEY2
	IF(KEY4.EQ.5)GOTO M22
M21,	DISPLAY(8,$SCR_POS(7,16),MAT)
	DISPLAY(8,$SCR_POS(7,6),'MATERIAL: ')
	GOTO M30 
M22,	DISPLAY(8,$SCR_POS(9,16),MAT)
	DISPLAY(8,$SCR_POS(9,6),'MATERIAL: ')
	GOTO M30
M23,	DISPLAY(8,$SCR_POS(6,16),MAT)
	DISPLAY(8,$SCR_POS(6,6),'MATERIAL: ')
	GOTO M30
M24,	DISPLAY(8,$SCR_POS(8,16),MAT)
	DISPLAY(8,$SCR_POS(8,6),'MATERIAL: ')
	GOTO M30
M25,	DISPLAY(8,$SCR_POS(9,16),MAT)
	DISPLAY(8,$SCR_POS(9,6),'MATERIAL: ')

	
M30,	CALL CALC
	CALL OUTA

	GOTO ZA

KIND,   GOTO(K1,K2,K3,K4,K5,K6,K7,K8,K9),KEY3
K1,     PART='BOW'
	RETURN
K2,     PART='WW'
	RETURN
K3,     PART='CSW'
	RETURN
K4,     PART='EW'
	RETURN
K5,     PART='PLUG'
	RETURN
K6,     PART='HPP'
	RETURN
K7,     PART='FLAT WASHER'
	RETURN
K8,     PART='CP'
	RETURN
K9,     PART='CPP'
	RETURN


CALC,   IF(KEY2.EQ.8)GOTO CUP			; CALCULATES STOCK WIDTH AND FEED
	IF(KEY2.EQ.9)GOTO CUP
C1,     IF(TH.LE.10)GOTO C2
	IF(TH.LE.20)GOTO C3
	IF(TH.LE.32)GOTO C4
	IF(TH.LE.40)GOTO C5
	SWIDE=OD + (((TH*150)/100)*2)	;.041 AND OVER
           
	CALL FRACT
	
	FEED=OD + TH
	IF(TH.LT.62)FEED=OD + 62
	WEB=TH * (150/100)
	GOTO C6
C2,     SWIDE=OD + (125*2)		;.006 TO .010
	CALL FRACT
	FEED=OD + 125
	WEB=125
	GOTO C6
C3,     SWIDE=OD + 125  		;.011 TO .020
	CALL FRACT
	FEED=OD + 62
	WEB=62
	GOTO C6
C4,     SWIDE=OD + 125			;.021 TO .032
	CALL FRACT
	FEED=OD+62
	WEB=62
	GOTO C6
C5,     SWIDE=OD + 125			;.033 TO .040
	CALL FRACT
	FEED=OD + 62
	WEB=62
C6,	IF(HOLE.GT.1)GOTO C10
C6A,    STWT=SWIDE*FEED*TH*DEN/1000000
	FSTWT=FSWIDE*FEED*TH*DEN/1000000	
	STWT=STWT/HOLE
	FSTWT=FSTWT/HOLE
	FWT=((OD*OD*31416/4)/1000000-(ID*ID*31416/4)/1000000)*TH*DEN/10000
	IF(KEY3.EQ.4)GOTO C7
	RETURN
C7,     FWT=FWT-4*(SLOTX*SLOTY*TH*DEN/10000)
	RETURN
C10,    SWIDE=SWIDE+((HOLE-1)*(866*(WEB+OD))/1000)
	CALL FRACT
	GOTO C6A
	

DP,	SW=0						;DECIMAL POINT
	LLL=
	MMM=
	IF(SX.EQ.1)GOTO DP5
	IF(KKK(1,1).EQ.'.')GOTO DP1
	IF(KKK(2,2).EQ.'.')GOTO DP2
	IF(KKK(3,3).EQ.'.')GOTO DP3
DP0,	WRITES(8,'  ERROR - WRONG DECMAL POINT - FORMAT IS XXX.XXX')
	WRITES(8,'  PRESS RETURN OR ENTER TO START OVER')
        READS(7,ANS)
	SW=1
	RETURN
DP1,	IF(KKK(5,6).NE.'  ')GOTO DP0
	IF(KKK(4,4).EQ.' ')GOTO DP0
	LLL=KKK(2,4)
	MMM=LLL
	RETURN
DP2,	IF(KKK(6,6).NE.' ')GOTO DP0
	IF(KKK(5,5).EQ.' ')GOTO DP0
	LLL(1,1)=KKK(1,1)
	LLL(2,4)=KKK(3,5)
	MMM=LLL
	RETURN
DP3,	IF(KKK(6,6).EQ.' ')GOTO DP0
	LLL(1,2)=KKK(1,2)
	LLL(3,5)=KKK(4,6)
	MMM=LLL
	RETURN
DP5,	IF(QQQ(1,1).EQ.'.')GOTO DP6
	IF(QQQ(2,2).EQ.'.')GOTO DP7
	IF(QQQ(3,3).EQ.'.')GOTO DP8
	IF(QQQ(4,4).EQ.'.')GOTO DP9
	GOTO DP0
DP6,	IF(QQQ(5,7).NE.'   ')GOTO DP0
	IF(QQQ(4,4).EQ.' ')GOTO DP0
	RRR=QQQ(2,4)
	SSS=RRR
	RETURN
DP7,	IF(QQQ(6,7).NE.'  ')GOTO DP0
	IF(QQQ(5,5).EQ.' ')GOTO DP0
	RRR(1,1)=QQQ(1,1)
	RRR(2,4)=QQQ(3,5)
	SSS=RRR
	RETURN
DP8,	IF(QQQ(7,7).NE.' ')GOTO DP0
	IF(QQQ(6,6).EQ.' ')GOTO DP0
	RRR(1,2)=QQQ(1,2)
	RRR(3,5)=QQQ(4,6)
	SSS=RRR
	RETURN
DP9,	IF(QQQ(7,7).EQ.' ')GOTO DP0
	RRR(1,3)=QQQ(1,3)
	RRR(4,6)=QQQ(5,7)
	SSS=RRR
	RETURN
			
	
CUP,	ODM=OD - TH				;CALCULATES FLAT BLANK DIAMETER
	HIGHM=HIGH - (TH+RAD)
	RADM=RAD + (TH/2)
	DIAM=OD -  2*TH - 2*RAD
	NUM=DIAM*DIAM + 628*DIAM*RADM/100 + 8*RADM*RADM + 4*ODM*HIGHM
	NUM=NUM*10
	CALL ROOT
	OD=SQ/100
	GOTO C1
	
	
	
FRACT,  SWIDEA=			   ;CALCULATES NEXT FRACTIONAL STOCK WIDTH UP
	N=1
	J=1
	GG=SWIDE(3,5)
GG1,	IF(GG*10.LT.N*625)GOTO GG2
	N=N+1
	GOTO GG1	
GG2,	HH=SWIDE(1,2)	
	IF(HH.GT.9)GOTO GG3	
	SWIDEA(1,1)=HH
	SWIDEA(2,2)='-'
	J=2
	GOTO GG4
GG3,	SWIDEA(1,2)=HH
	SWIDEA(3,3)='-'
	J=3
	GOTO GG4

GG4,	FSWIDE(1,2)=SWIDE(1,2)
	FSWIDE(3,5)=N*625/10
	IF(N.EQ.16)FSWIDE=FSWIDE+1000
	
	GOTO(G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,G11,G12,G13,G14,G15,G16), N
G1,	IF(J.EQ.3)GOTO G1A
	SWIDEA(3,6)='1/16'
	GOTO GG10
G1A,	SWIDEA(4,7)='1/16'
	GOTO GG10
G2,	IF(J.EQ.3)GOTO G2A
	SWIDEA(3,5)='1/8'
	GOTO GG10
G2A,	SWIDEA(4,6)='1/8'
	GOTO GG10
G3,	IF(J.EQ.3)GOTO G3A
	SWIDEA(3,6)='3/16'
	GOTO GG10
G3A,	SWIDEA(4,7)='3/16'
	GOTO GG10
G4,	IF(J.EQ.3)GOTO G4A
	SWIDEA(3,5)='1/4'
	GOTO GG10
G4A,	SWIDEA(4,6)='1/4'
	GOTO GG10
G5,	IF(J.EQ.3)GOTO G5A
	SWIDEA(3,6)='5/16'
	GOTO GG10
G5A,	SWIDEA(4,7)='5/16'
	GOTO GG10
G6,	IF(J.EQ.3)GOTO G6A
	SWIDEA(3,5)='3/8'
	GOTO GG10
G6A,	SWIDEA(4,6)='3/8'
	GOTO GG10
G7,	IF(J.EQ.3)GOTO G7A
	SWIDEA(3,6)='7/16'
	GOTO GG10
G7A,	SWIDEA(4,7)='7/16'
	GOTO GG10
G8,	IF(J.EQ.3)GOTO G8A
	SWIDEA(3,5)='1/2'
	GOTO GG10
G8A,	SWIDEA(4,6)='1/2'
	GOTO GG10
G9,	IF(J.EQ.3)GOTO G9A
	SWIDEA(3,6)='9/16'
	GOTO GG10
G9A,	SWIDEA(4,7)='9/16'
	GOTO GG10
G10,	IF(J.EQ.3)GOTO G10A
	SWIDEA(3,5)='5/8'
	GOTO GG10
G10A,	SWIDEA(4,6)='5/8'
	GOTO GG10
G11,	IF(J.EQ.3)GOTO G11A
	SWIDEA(3,7)='11/16'
	GOTO GG10
G11A,	SWIDEA(4,8)='11/16'
	GOTO GG10
G12,	IF(J.EQ.3)GOTO G12A
	SWIDEA(3,5)='3/4'
	GOTO GG10
G12A,	SWIDEA(4,6)='3/4'
	GOTO GG10
G13,	IF(J.EQ.3)GOTO G13A
	SWIDEA(3,7)='13/16'
	GOTO GG10
G13A,	SWIDEA(4,8)='13/16'
	GOTO GG10
G14,	IF(J.EQ.3)GOTO G14A
	SWIDEA(3,5)='7/8'
	GOTO GG10
G14A,	SWIDEA(4,6)='7/8'
	GOTO GG10
G15,	IF(J.EQ.3)GOTO G15A
	SWIDEA(3,7)='15/16'
	GOTO GG10
G15A,	SWIDEA(4,8)='15/16'
	GOTO GG10
G16,	IF(J.EQ.3)GOTO G18
	IF(HH.NE.9)GOTO G17
	SWIDEA(1,2)='10'
	SWIDEA(3,3)='-'
	SWIDEA(4,8)=
	RETURN
G17,	SWIDEA(1,1)=HH+1
	SWIDEA(2,2)='-'	
	RETURN
G18,	SWIDEA(1,2)=HH+1
	SWIDEA(3,3)='-'
GG10,	RETURN
	
	
OUTA,	OUTPUT=				;OUTPUT OF PRESS STAMPING PARTS
	GOTO(B1,B1,B1,B2,B3,B1,B1,B4,B5), KEY2
B1,	DISPLAY(8,$SCR_POS(8,1))
	GOTO B6
B2,	DISPLAY(8,$SCR_POS(10,1))
	GOTO B6
B3,	DISPLAY(8,$SCR_POS(7,1))
	GOTO B6
B4,	DISPLAY(8,$SCR_POS(9,1))
	GOTO B6
B5,	DISPLAY(8,$SCR_POS(10,1))
B6,	DISPLAY(8,$SCR_CLR(EOS))
B10,    A1(5,13)='STOCK WT:'
	A1(40,56)='STOCK WT (FRACT):'
	A2(5,14)='FINISH WT:'
	A3(5,16)='STOCK WIDTH:'
	A3(40,59)='STOCK WIDTH (FRACT):' 
	A4(5,9)='FEED:'
	A1(15,22)=STWT, 'ZZZZ.XXX'
	A1(58,65)=FSTWT, 'ZZZZ.XXX'
	A2(16,21)=FWT, 'ZZ.XXX'
	A3(18,23)=SWIDE, 'ZZ.XXX'
	A3(61,68)=SWIDEA
	A4(11,16)=FEED, 'ZZ.XXX'
	IF(KEY2.LT.8)GOTO B11
	A4(40,49)='BLANK DIA:'
	A4(51,56)=OD, 'ZZ.XXX'
B11,	WRITES(8," ")
	WRITES(8,A1)
	WRITES(8,A2)
	WRITES(8,A3)
	WRITES(8,A4)
	WRITES(8,A5)
	RETURN
	
	

FF1,	 DATA= 				;WIRE FORMS
	 INFO=
	 MORE=
	 DISPLAY(8,$SCR_CLR(SCREEN))
	 DISPLAY(8,$SCR_POS(3,10),'WIRE FORM')
	 WRITES(8," ")
F0,      DISPLAY(8,13,'     ENTER WIRE DIAMETER: ')
	 ONERROR F0
	 READS(7,WODA)
	 KKK=WODA
	 CALL DP
	 IF(SW.EQ.1)GOTO FF1
	 WOD=MMM
	 DISPLAY(8,13,'     ENTER WIRE LENGTH: ')
	 READS(7,WLA)
	 KKK=WLA
	 CALL DP
	 IF(SW.EQ.1)GOTO FF1
	 WL=MMM
	 GOTO M1
	 
F1,      STWT=(WOD*WOD*31416/4)/10000
	 STWT=STWT*WL*DEN/1000000
	 OUTPUT=
	 DISPLAY(8,$SCR_POS(6,16),MAT)
	 DISPLAY(8,$SCR_POS(6,6),'MATERIAL: ')
	 DISPLAY(8,$SCR_POS(8,1))
	 DISPLAY(8,$SCR_CLR(EOS))
	 A1(5,13)='STOCK WT:'
	 A1(15,20)=STWT, 'ZZ.XXX'
	 WRITES(8," ")
	 WRITES(8,A1)
	 GOTO ZA
	 
	 

SS1,	DATA=			;WIRE SPRINGS
	INFO=
	MORE=
	DISPLAY(8,$SCR_CLR(SCREEN))
	DISPLAY(8,$SCR_POS(2,5),'SPRING TYPES')
	DISPLAY(8,$SCR_POS(3,10),'1) STANDARD COMPRESSION')
	DISPLAY(8,$SCR_POS(4,10),'2) TAPERED COMPRESSION')
	DISPLAY(8,$SCR_POS(5,10),'3) EXTENSION SPRING WITH SIMPLE LOOP ENDS')
	DISPLAY(8,$SCR_POS(6,10),'4) TORSION WITH STRAIGHT LEGS')
	DISPLAY(8,$SCR_POS(7,10),'5) TORSION WITH STRAIGHT LEGS AND FORMED ENDS')
	DISPLAY(8,$SCR_POS(8,5),'CHOOSE FROM ABOVE: ')
	ONERROR SS1
	READS(7,KEYD)
	KEY4=KEYD
S0,     DISPLAY(8,$SCR_CLR(SCREEN))
	DISPLAY(8,$SCR_POS(1,1))
	GOTO (S1,S2,S3,S4,S4), KEY4
S1,     WRITES(8," ")
	ONERROR S0
	DISPLAY(8,13,'     PART TYPE: STANDARD COMPRESSION SPRING')
	WRITES(8," ")
	DISPLAY(8,13,'     ENTER WIRE DIAMETER: ')
	READS(7,WODA)
	KKK=WODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	WOD=MMM
	DISPLAY(8,13,'     ENTER SPRING OUTSIDE DIAMETER: ')
	READS(7,ODA)
	KKK=ODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	OD=MMM
	DISPLAY(8,13,'     ENTER FREE LENGTH: ')
	READS(7,THA)
	KKK=THA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	TH=MMM
	DISPLAY(8,13,'     ENTER TOTAL NUMBER OF COILS: ')
	READS(7,COILA)
	SX=1
	QQQ=COILA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	COIL=SSS
	DISPLAY(8,13,'     END COILS CLOSED (Y OR N): ')
	READS(7,ANS)
	IF(YN.NE.'Y')KEY5=0
	GOTO M1
	

S2,	DATA=
	INFO=
	MORE=
	WRITES(8," ")
	ONERROR S0
	DISPLAY(8,13,'     PART TYPE: TAPERED COMPRESSION SPRING')
	WRITES(8," ")
	DISPLAY(8,13,'     ENTER WIRE DIAMETER: ')
	READS(7,WODA)
	KKK=WODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	WOD=MMM
	DISPLAY(8,13,'     ENTER LARGE END OUTSIDE DIAMETER: ')
	READS(7,OD1A)
	KKK=OD1A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	OD1=MMM
	DISPLAY(8,13,'     ENTER SMALL END OUTSIDE DIAMETER: ')
	READS(7,OD2A)
	KKK=OD2A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	OD2=MMM
	DISPLAY(8,13,'     ENTER FREE LENGTH: ')
	READS(7,THA)
	KKK=THA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	TH=MMM
	DISPLAY(8,13,'     ENTR TOTAL NUMBER OF COILS: ')
	READS(7,COILA)
	SX=1
	QQQ=COILA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	COIL=SSS
	GOTO M1
	

S3,	DATA=
	INFO=
	MORE=
	WRITES(8," ")
	ONERROR S0
	DISPLAY(8,13,'     PART TYPE: EXTENSION SPRING')
	WRITES(8," ")
	DISPLAY(8,13,'     ENTER WIRE DIAMETER: ')
	READS(7,WODA)
	KKK=WODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	WOD=MMM
	DISPLAY(8,13,'     ENTER SPRING OUTSIDE DIAMETER: ')
	READS(7,ODA)
	KKK=ODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	OD=MMM
	DISPLAY(8,13,'     ENTER NUMBER OF COILS WITHOUT ENDS: ')
	READS(7,COILA)
	SX=1
	QQQ=COILA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	COIL=SSS
	DISPLAY(8,13,'     DOES SPRING HAVE END LOOPS (Y OR N): ')
	READS(7,ANS)
	IF(YN.EQ.'Y') ED=1
	GOTO M1
	

S4,	DATA=
	INFO=
	MORE=
	ONERROR S0
	IF(KEY4.EQ.5)GOTO S4A
	DISPLAY(8,13,'     PART TYPE: TORSION WITH STRAIGHT LEGS')
        GOTO S4B
S4A,	DISPLAY(8,13,'     PART TYPE: TORSION WITH STRAIGHT LEGS AND FORMED ENDS')
S4B,	WRITES(8," ")
	DISPLAY(8,13,'     ENTER WIRE DIAMETER: ')
	READS(7,WODA)
	KKK=WODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	WOD=MMM
	DISPLAY(8,13,'     ENTER SPRING OUTSIDE DIAMETR: ')
	READS(7,ODA)
	KKK=ODA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	OD=MMM
	DISPLAY(8,13,'     ENTER THE TATAL NUMBER OF COILS: ')
	READS(7,COILA)
	SX=1
	QQQ=COILA
	CALL DP
	IF(SW.EQ.1)GOTO S0
	COIL=SSS
	DISPLAY(8,13,'     ENTER FIRST STRAIGHT LEG LENGTH: ')
	READS(7,LEG1A)
	SX=0
	KKK=LEG1A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	LEG1=MMM
	IF(KEY4.EQ.4)GOTO S4C
	DISPLAY(8,13,'     ENTER FIRST LEG FORMED END LENGTH: ')
	READS(7,HOOK1A)
	KKK=HOOK1A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	HOOK1=MMM
S4C,    DISPLAY(8,13,'     ENTER SECOND STRAIGHT LEG LENGTH: ')
	READS(7,LEG2A)
	KKK=LEG2A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	LEG2=MMM
	IF(KEY4.EQ.4)GOTO S4D
	DISPLAY(8,13,'     ENDER SECOND LEG FORMED END LENGTH: ')
	READS(7,HOOK2A)
	KKK=HOOK2A
	CALL DP
	IF(SW.EQ.1)GOTO S0
	HOOK2=MMM
S4D,	GOTO M1
	
	
	
S5,	WAREA=(WOD*WOD*31416/4)/1000
	MOD=OD-WOD
	MOD1=OD1-WOD
	MOD2=OD2-WOD
	CALL SMAT
	
	GOTO (S10,S20,S30,S40,S50), KEY4
	
S10,	CIR=MOD*31416/10000
	H=((TH-(2*WOD))*1000)/(COIL-2000)
	NUM=(CIR*CIR + H*H)/1000
	CALL ROOT
	WL=2*CIR + ((COIL-2000)*SQ/1000)
	STWT=WAREA*WL*DEN/10000000
	CALL OUTB
	GOTO ZA
	
S20,	CIR1=MOD1*31416/10000
	CIR2=MOD2*31416/10000
	AVECIR=(CIR1+CIR2)/2
	H=((TH-(2*WOD))*1000)/(COIL-2000)
	NUM=(AVECIR*AVECIR + H*H)/1000
	CALL ROOT
	WL=(CIR1+CIR2) + ((COIL-2000)*SQ/1000)
	STWT=WAREA*WL*DEN/10000000
	CALL OUTB
	GOTO ZA
	
S30,    CIR=MOD*31416/10000
	WL=CIR*(COIL+2000)/1000
	IF(ED.EQ.0)WL=CIR*COIL/1000
	STWT=WAREA*WL*DEN/10000000
        CALL OUTB
	GOTO ZA
	
S40,	CIR=MOD*31416/10000
	WL=(CIR*COIL/1000)+LEG1+LEG2
	STWT=WAREA*WL*DEN/10000000
	CALL OUTB
	GOTO ZA
	
S50,	CIR=MOD*31416/10000
	WL=(CIR*COIL/1000)+LEG1+LEG2+HOOK1+HOOK2
	STWT=WAREA*WL*DEN/10000000
	CALL OUTB
	GOTO ZA
	
SMAT,	GOTO(SM1,SM1,SM2,SM1,SM3),KEY4
SM1,    DISPLAY(8,$SCR_POS(8,16),MAT)
	DISPLAY(8,$SCR_POS(8,6),'MATERIAL: ')
	RETURN
SM2,	DISPLAY(8,$SCR_POS(7,16),MAT)
	DISPLAY(8,$SCR_POS(7,6),'MATERIAL: ')
	RETURN
SM3,	DISPLAY(8,$SCR_POS(9,16),MAT)
	DISPLAY(8,$SCR_POS(9,6),'MATERIAL: ')
	RETURN	
			
OUTB,	OUTPUT=			;OUTPUT FOR WIRE SPRING PARTS
	GOTO(OB1,OB1,OB2,OB1,OB3),KEY4
OB1,	DISPLAY(8,$SCR_POS(9,1))
	DISPLAY(8,$SCR_CLR(EOS))
	DISPLAY(8,$SCR_POS(10,1))
	GOTO OB6
OB2,	DISPLAY(8,$SCR_POS(8,1))
	DISPLAY(8,$SCR_CLR(EOS))
	DISPLAY(8,$SCR_POS(9,1))
	GOTO OB6	
OB3,	DISPLAY(8,$SCR_POS(10,1))
	DISPLAY(8,$SCR_CLR(EOS))
	DISPLAY(8,$SCR_POS(11,1))
	GOTO OB6		
OB6,	A1(5,13)='STOCK WT:'
	A1(15,22)=STWT, 'ZZZZ.XXX'
	A2(5,16)='WIRE LENGTH: '
	A2(18,25)=WL, 'ZZZZ.XXX'
	WRITES(8,A1)
	WRITES(8,A2)
	RETURN
	
	
      
ROOT,   NUM=NUM*1000		;SQUARE ROOT CALCULATOR
	Y=1
R1,	P=Y*Y
	IF(P.GE.NUM)GOTO R2
	Y=Y+1
	GOTO R1
R2,	SQ=Y
	RETURN
	

ZA,	DISPLAY(8,13,'   DO YOU WISH TO CALCULATE ANOTHER PART (Y OR N): ')
	READS(7,ANS)
	IF(YN.NE.'Y') GOTO FINI	
	DISPLAY(8,$SCR_CLR(SCREEN))
	DATA=
	OUTPUT=
	INFO=
	KEYS=
	MISC=
	MORE=
	GOTO BGN

FINI,	WRITES(8,"   PRESS RETURN OR ENTER WHEN DONE")
	READS(7,ANS)
	CLOSE 7
	CLOSE 8
	XCALL FLAGS (1000000,1)
	STOP
      
	
END
