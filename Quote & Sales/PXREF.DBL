.SUBROUTINE PXREF
; Part cross referencer
;
; This program scans QSQUOTE and QSSALE to print all part numbers, or to
; select all part numbers matching a key.
;
COMMON ADDR1
        AD1, a79     ;formatted address
        AD2, a79
        AD3, a79
        AD4, a79
COMMON QSCODE
        CODE, a3     ;three letter code
RECORD QUOTE
        QCODE, a3    ;three letter code
        DATE, d8     ;date of quote
        HPART, a15   ;Hubbard part number
        CPART, a15   ;Customer part number
        QTY, 6a4     ;Quantities quoted
        PRICE, 6d6   ;Prices for those quantities
        DESCRP,a50   ;Description
        ENUM, a6     ;Estimate number
        PRCODE,a5    ;Price code (7A89)
RECORD SALE
        SCODE, a3    ;three letter code
        ORDN, d5     ;Order number
        SDTE, d8     ;Date of sale
        SQTY, d7     ;Quantity sold
        SPRCE, d6    ;Price
        SHPRT, a15   ;Hubbard part
        SCPRT, a15   ;Customer part
        PRCDE, a5    ;Price code (7A89)
        PLAT, a3     ;plating
RECORD SRKEY
        KEY, a15     ;part number to match
RECORD ANS
        YN, a1
RECORD QHEAD
        ,a5
        ,a12,'Hubbard Part'
        ,a9
        ,a13,'Customer Part'
        ,a11
        ,a4,'Date'
        ,a6
        ,a6,'Est. #'
RECORD SHEAD
        ,a5
        ,a12,'Hubbard Part'
        ,a9
        ,a13,'Customer Part'
        ,a11
        ,a4,'Date'
        ,a6
        ,a7,'Order #'
RECORD OUTDAT
        OD1, A2       ;date converter
        ,a1, '/'
        OD2, A2
        ,a1, '/'
        OD3, A2
RECORD
        CD1, A6       ;raw material code elements
        CDA2, A4      ;selection 2 and 4 are decimals
        CD3, A2       ;put into alpha-numerics to
        CDA4, A3      ;help achieve constant format
RECORD ,X
        SHPART, A15   ;combination of part number elements
RECORD
        CD2, D4
        CD4, D3
RECORD
        PART, a18     ;both formatted and non formatted parts
        PARTO, a18    ;formatted part XXXXXX-XXXX-XX-XXX
        USE,a1
        FILE,a1
        PL, a79
        SRQ, d1
        SRS, d1
        ERR, d1
        REC, d3
        LIN, d2
        L, d3
        M, d3
        INDAT, d6
        val, d3
        ERRNUM,d3
        ELINE,d4
;*****************
;  Main Program
;*****************
.PROC
        open(8,o,'TT:')
        open(7,i,'TT:')
	xcall flags (1000,1)
        open(2,I:I,'DBLDATA:QSQUOTE')   ;read only
        open(3,I:I,'DBLDATA:QSSALE')

        display(8,$SCR_POS(1,1), $SCR_CLR(eos))
        display(8,$SCR_POS(1,1),AD1)
        display(8,$SCR_POS(2,1),AD2)   ;print address
        display(8,$SCR_POS(3,1),AD3)
        display(8,$SCR_POS(4,1),AD4)
        display(8,$SCR_POS(5,1),'..............................................................................')
        display(8,$SCR_POS(6,1),'Quote and Sales Parts Cross Referencer')

MENU1,  display(8,$SCR_POS(9,1), $SCR_CLR(eos))
        display(8,$SCR_POS(9,3),'Do you wish to search by:')
        display(8,$SCR_POS(11,8),'O) Our part number')
        display(8,$SCR_POS(12,8),'T) Their part number')
        display(8,$SCR_POS(13,8),'L) List all parts')
        display(8,$SCR_POS(14,8),'Q) Quit')
ST1,    display(8,$SCR_POS(16,3),'Select:    ')
        display(8,$SCR_POS(16,11))
        reads(7,ANS)
        using ANS select
          ('O','T','L'), USE=YN
          ('Q'), goto OUT
          (), goto ST1
        endusing
;***********************
; Get search key
KEY,    if (USE.eq.'L') goto MENU2
        display(8,$SCR_POS(19,3),'Enter part number:                 ')
        display(8,$SCR_POS(19,22))
        reads(7,SRKEY)
        if (USE.eq.'O') begin    ;hubbard part - take out dashes
            PART=KEY
            call PARSE
            if (ERR.eq.1) goto KEY
            KEY=SHPART
           end
;***********************
; Select where to search
MENU2,  display(8,$SCR_POS(9,1), $SCR_CLR(eos))
        display(8,$SCR_POS(9,3),'Do you wish to search:')
        display(8,$SCR_POS(11,8),'Q) Quotes')
        display(8,$SCR_POS(12,8),'S) Sales')
        display(8,$SCR_POS(13,8),'B) Both')
        display(8,$SCR_POS(14,8),'E) Exit')
ST2,    display(8,$SCR_POS(16,3),'Select:    ')
        display(8,$SCR_POS(16,11))
        reads(7,ANS)
        using ANS select
          ('Q','S','B'), FILE=YN
          ('E'), goto OUT
          (), goto ST2
        endusing
        if (FILE.eq.'S') goto SALES
;*********************
; Search and display quotes
QUOTES, HPART=
        LIN=1       ;line number
        REC=1       ;record number
        display(8,$SCR_POS(9,1), $SCR_CLR(eos))
        display(8,$SCR_POS(9,1),'QUOTES:')
        display(8,$SCR_POS(10,1),QHEAD) 
        display(8,$SCR_POS(11,1),'---------------------------------------------------------------------')
Q1,     call SRCHQ          ;search quotes
        if (SRQ.eq.2) goto ENDQ  ;no match
        call LDQ            ;load and display
        if (LIN.gt.10) goto PAGEQ
        goto Q1
;*********************
; Create page break - keep display on one screen
PAGEQ,  
	 display(8,$SCR_POS(23,3),'Press ENTER to continue, SPACE to stop listing.')
ACCQ,   
	 display(8,$SCR_POS(23,50))
        accept(7,ANS,DONE)
        display(8,$SCR_POS(23,50), $SCR_CLR(eol))

        xcall decml(ANS,val)
        if (val.eq.32)
		begin
            	if (FILE.eq.'B') 
			then goto SALES
                	else goto MENU1
		end

        if (val.ne.13) goto ACCQ

        accept(7,ANS,DONE)	; line feed
        LIN=1               ;current line number
        display(8,$SCR_POS(12,1), $SCR_CLR(eos))
        goto Q1

;*********************
; End of quotes
ENDQ,   if (REC.eq.1) display(8,$SCR_POS(14,3),'No matching part found within quotes.')
        display(8,$SCR_POS(23,3),'Press ENTER to continue.')
        reads(7,ANS)
        if (FILE.eq.'B') goto SALES
        goto MENU1
;*********************
; load and display quotes
LDQ,    if ((USE.eq.'O').and.(HPART.ne.KEY)) return 
        if ((USE.eq.'T').and.(CPART.ne.KEY)) return 
        PL=
        PL(1,3)=REC,'ZX.'
        PART=HPART
        call FPART
        PL(6,23)=PARTO
        PL(27,41)=CPART
	INDAT(1,4)=DATE(1,4)
	INDAT(5,6)=DATE(7,8)
        ;INDAT=DATE
        call CONVDT
        PL(49,56)=OUTDAT
        if ((ENUM(1,1).eq.'E').or.(ENUM(1,1).eq.'C')) then begin
                PL(61,61)=ENUM(1,1)
                PL(62,62)='-'
                PL(63,67)=ENUM(2,6)
              end
            else PL(61,66)=ENUM
        display(8,$SCR_POS(11+LIN,1),PL)
        incr LIN    ;increase line number
        incr REC    ;increase record num
        return
;*********************
; search quotes for matching parts
SRCHQ,  if (HPART.eq.' ') goto FIRSTQ
        reads(2,QUOTE,NOMQTS)  ;read next quote of customer
        if (QCODE.eq.CODE) then SRQ=1
           else SRQ=2
        return
NOMQTS, display(8,$SCR_POS(12+LIN,3),'End of quotes')
        SRQ=2
        return
FIRSTQ, 
	 onerror NOQTS       ;read first quote of customer
        read(2,QUOTE,CODE)
	 offerror

        SRQ=1
        return
NOQTS,  
	offerror
	xcall ERROR (ERRNUM,ELINE)
       if (ERRNUM.eq.40) 
		then display(8,$SCR_POS(12+LIN,3),'Record locked by another user.')
           	else display(8,$SCR_POS(12+LIN,3),'No quotes were found for this customer.')
        SRQ=2
        return

;*********************
; search for and display sales
SALES,  SHPRT=
        LIN=1    ;line number
        REC=1    ;record number
        display(8,$SCR_POS(9,1), $SCR_CLR( eos))
        display(8,$SCR_POS(9,1),'SALES:')
        display(8,$SCR_POS(10,1),SHEAD) 
        display(8,$SCR_POS(11,1),'---------------------------------------------------------------------')
S1,     call SRCHS
        if (SRS.eq.2) goto ENDS
        call LDS
        if (LIN.gt.10) goto PAGES
        goto S1

;*********************
; Page break.  Keep display on one screen
PAGES,  
	 display(8,$SCR_POS(23,3),'Press ENTER to continue, SPACE to stop listing.')
ACCS,   
	 display(8,$SCR_POS(23,50))
        accept(7,ANS,DONE)
        display(8,$SCR_POS(23,50), $SCR_CLR(eol))

        xcall decml(ANS,val)
        if (val.eq.32) goto MENU1
        if (val.ne.13) goto ACCS

        accept(7,ANS,DONE)	; line feed
        LIN=1
        display(8,$SCR_POS(12,1), $SCR_CLR(eos))

        goto S1

;*********************
; Last sale for this customer found
ENDS,   if (REC.eq.1) display(8,$SCR_POS(14,3),'No matching part found within sales.')
        display(8,$SCR_POS(23,3),'Press ENTER to continue.')
        reads(7,ANS)
        goto MENU1
;*********************
; Load and display sales
LDS,    if ((USE.eq.'O').and.(SHPRT.ne.KEY)) return   ;check match
        if ((USE.eq.'T').and.(SCPRT.ne.KEY)) return 
        PL=
        PL(1,3)=REC,'ZX.'
        PART=SHPRT
        call FPART
        PL(6,23)=PARTO
        PL(27,41)=SCPRT
	INDAT(1,4)=SDTE(1,4)
	INDAT(5,6)=SDTE(7,8)
        ;INDAT=SDTE
        call CONVDT
        PL(49,56)=OUTDAT
        PL(61,65)=ORDN,'XXXXX'
        display(8,$SCR_POS(11+LIN,1),PL)
        incr LIN
        incr REC
        return
;*********************
; search for sales for this customer
SRCHS,  
	 if (SHPRT.eq.' ') goto FIRSTS
        reads(3,SALE,NOMSLS)     ;read next sale
        if (SCODE.eq.CODE) 
		then SRS=1
           	else SRS=2
        return
NOMSLS, 
	 display(8,$SCR_POS(12+LIN,3),'End of sales')
        SRS=2
        return
FIRSTS, 
	 onerror NOSLS     ;read first sale
        read(3,SALE,CODE)
	 offerror
        SRS=1
        return
NOSLS,  
	 offerror
	 xcall ERROR (ERRNUM,ELINE)
        if (ERRNUM.eq.40) 
		then display(8,$SCR_POS (12+LIN,3),'Record locked by another user.')
           	else display(8,$SCR_POS(12+LIN,3),'No sales were found for this customer.')
        SRS=2
        return

;*********************
; Takes unformated a15 Hubbard part into formatted variable length part
FPART,  parto = '               '
        if (part.eq.' ') return
        for l from 1 thru 6 if (part(l,l).eq.' ') goto for1
for1,   parto(1,l) = part(1,l)      ;stops at first space, therefore
        parto(l,l) = '-'            ;l one to big after for loop
        l=l+1
        for m from 7 thru 10 if (part(m,m).ne.' ') goto for2
for2,   parto(l,l+(11-m)) = part(m,10)
        l=l+(11-m)
        parto(l,l) = '-'
        l=l+1
        parto(l,l) = part(11,11)
        l=l+1
        if (part(12,12).ne.' ') begin
           parto(l,l) = part(12,12)
           l=l+1
          end
        parto(l,l) = '-'
        l=l+1
        for m from 13 thru 15
          if ((part(m,m).ne.' ').and.(part(m,m).ne.'0')) goto for3
for3,   parto(l,l+(15-m)) = part(m,15)
        l=l+1+(15-m)
        return       
;*********************
; Put user entered Hubbard part into usable form
PARSE,  
	 ERR=0        ;error flag
        onerror PARERR
        for L from 2 thru 7 if(PART(L,L).eq.'-') goto P1
        goto PARERR
P1,     
	 CD1 = PART(1,L-1)     ;skip '-' char.
        incr L
        for M from (L+1) thru (L+4) if(PART(M,M).eq.'-') goto P2
        goto PARERR
P2,     
	 CD2 = PART(L,M-1)
        CDA2 = CD2, 'ZZZX'
        incr M
        for L from (M+1) thru (M+2) if(PART(L,L).eq.'-') goto P3
        goto PARERR
P3,     
	 CD3 = PART(M,L-1)
        incr L
        if (L.eq.16) 
		begin
            	CD4 = PART(16,18)   ;Part full length - no room for ending space
		offerror
            	RETURN
           	end
        for M from (L+1) thru (L+3) if(PART(M,M).eq.' ') goto P4
        goto PARERR
P4,     
	 CD4 = PART(L,M-1)
        CDA4 = CD4, 'XXX'
	 offerror  
        RETURN
PARERR, 
	 offerror 		; ???
	 ERR = 1      ;set error flag
        display(8,$SCR_POS(21,1),'Bad part number format.  Re-enter as XXXXXX-XXXX-XX-XXX.')
        RETURN

;*********************
;  convert date from d6 to formated a8
CONVDT, od1 = indat(1,2), 'ZX'
        od2 = indat(3,4), 'XX'
        od3 = indat(5,6), 'XX'
        RETURN

;*********************
; return to QSMENU
OUT,    close 2
        close 3
        close 7
        close 8
        return
;*********************
DONE,   close 2
        close 3
        close 7
        close 8
        END
